---
// Dies ist eine Astro-Komponente.


const employees = Array.from({ length: 50 }, (_, i) => ({
  id: i + 1,
  serviceType: i % 2 === 0 ? 'Brot' : 'Gem체se',
  firstName: i % 2 === 0 ? 'Max' : 'Anna',
  lastName: i % 2 === 0 ? 'Mustermann' : 'Musterfrau',
  email: i % 2 === 0 ? 'max.mustermann@example.com' : 'anna.musterfrau@example.com',
  lastLogin: i % 2 === 0 ? '2023-01-15' : '2023-01-10',
  createdAt: i % 2 === 0 ? '2022-12-01' : '2022-11-20',
  status: i % 2 === 0 ? 'Aktiv' : 'Inaktiv',
}));

const itemsPerPage = 10;
let currentPage = 1;
const totalPages = Math.ceil(employees.length / itemsPerPage);

const getPaginatedEmployees = () => {
  const startIndex = (currentPage - 1) * itemsPerPage;
  const endIndex = startIndex + itemsPerPage;
  return employees.slice(startIndex, endIndex);
};

const goToNextPage = () => {
  if (currentPage < totalPages) {
    currentPage++;
  }
};

const goToPreviousPage = () => {
  if (currentPage > 1) {
    currentPage--;
  }
};
---
<div class="p-6 bg-gray-100 min-h-screen flex justify-center">
  <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-12xl overflow-x-auto mt-6">
    <h1 class="text-2xl font-bold text-gray-800 mb-6">Mitarbeiterverwaltung</h1>

    <!-- Suchfeld -->
    <div class="flex items-center justify-between mb-4">
      <input 
        type="text" 
        placeholder="Mitarbeiter suchen..." 
        class="w-1/3 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:border-blue-300"
      />
    </div>

    <!-- Tabelle mit Mitarbeitern -->
    <table class="table-auto w-full border-collapse border border-gray-300">
      <thead>
        <tr class="bg-gray-200">
          <th class="border border-gray-300 px-4 py-2 text-left">Service Art</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Vorname</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Nachname</th>
          <th class="border border-gray-300 px-4 py-2 text-left">E-Mail</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Letzter Login</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Erstellt am</th>
          <th class="border border-gray-300 px-4 py-2 text-left">Status</th>
          <th class="border border-gray-300 px-4 py-2 text-center">Aktionen</th>
        </tr>
      </thead>
      <tbody>
        {getPaginatedEmployees().map((employee) => (
          <tr>
            <td class="border border-gray-300 px-4 py-2">{employee.serviceType}</td>
            <td class="border border-gray-300 px-4 py-2">{employee.firstName}</td>
            <td class="border border-gray-300 px-4 py-2">{employee.lastName}</td>
            <td class="border border-gray-300 px-4 py-2">{employee.email}</td>
            <td class="border border-gray-300 px-4 py-2">{employee.lastLogin}</td>
            <td class="border border-gray-300 px-4 py-2">{employee.createdAt}</td>
            <td class="border border-gray-300 px-4 py-2">{employee.status}</td>
            <td class="border border-gray-300 px-4 py-2 text-center">
              <button class="px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700">Bearbeiten</button>
            </td>
          </tr>
        ))}
      </tbody>
    </table>

    <!-- Paginierung -->
    <div class="flex justify-between items-center mt-4">
      <button 
        class="px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400"
        onclick="{goToPreviousPage()}"
        disabled={currentPage === 1}
      >
        Vorherige Seite
      </button>
      <span>Seite {currentPage} von {totalPages}</span>
      <button 
        class="px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400"
        onclick="{goToNextPage()}"
        disabled={currentPage === totalPages}
      >
        N채chste Seite
      </button>
    </div>

    <!-- Button zum Hinzuf체gen eines neuen Mitarbeiters -->
    <div class="mt-6 flex justify-end">
      <button class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700">Neuen Mitarbeiter hinzuf체gen</button>
    </div>
  </div>
</div>
